{"version":3,"sources":["components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["Thumb","styled","div","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","map","name","type","onClick","toUpperCase","Notification","message","section","Section","props","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","btnNames","Object","keys","className","e","target","prevState","console","log","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEaA,EAAQC,IAAOC,IAAV,0B,OCYHC,I,EAAAA,EAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,eAACR,EAAD,WACE,uCAAUI,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,OACX,oDAAuBH,GAAQI,IAA/B,WCPOC,EAASR,IAAOS,OAAV,+gBCYJC,MAZf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,cAACN,EAAD,CAAQO,KAAK,SAAoBD,KAAMA,EAAME,QAASJ,EAAtD,SACGE,EAAKG,eADmBH,SCEpBI,I,EAAAA,EARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,8BACE,4BAAIA,OCDGpB,EAAQC,IAAOoB,QAAV,6HCUHC,MAVf,SAAiBC,GACf,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,eAAC,EAAD,WACE,4BAAID,IACHC,MCDQ,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KAkBMC,EAAqB,WACzB,OAAO3B,EAAOC,EAAUC,GAOpB0B,EAAWC,OAAOC,KAAK,CAAE9B,OAAMC,UAASC,QAE9C,OACE,sBAAK6B,UAAU,YAAf,UACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBZ,QAASoB,EAAUnB,gBA7BvB,SAAAuB,GAEjB,OADiBA,EAAEC,OAAOtB,MAExB,IAAK,OACH,OAAOa,GAAQ,SAAAU,GAAS,OAAIA,EAAY,KAE1C,IAAK,UACH,OAAOT,GAAW,SAAAS,GAAS,OAAIA,EAAY,KAE7C,IAAK,MACH,OAAOR,GAAO,SAAAQ,GAAS,OAAIA,EAAY,KACzC,QACEC,QAAQC,IAAI,iBAmBd,cAAC,EAAD,CAAShB,MAAM,aAAf,SACIO,IAGA,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,EACPvB,mBApB8B,WAEtC,OADgBiC,KAAKC,MAAc,IAAPtC,GAAeA,EAAOC,EAAUC,OAYtD,cAAC,EAAD,CAAcc,QAAQ,2BCvChCuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,W","file":"static/js/main.a746e171.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Thumb = styled.div``;\n","import { Thumb } from './Statistics.styles';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <Thumb>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total()}</p>\n      <p>Positive feedback: {good && positivePercentage()}%</p>\n    </Thumb>\n  );\n}\n\nexport default Statistics;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  border: 1px solid #000;\n  border-radius: 4px;\n\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n  :last-child {\n    background-color: #f58484;\n    &:hover,\n    :focus {\n      background-color: #eb4c4c;\n    }\n  }\n  :first-of-type {\n    background-color: #a4eea4;\n    &:hover,\n    :focus {\n      background-color: #5af05a;\n    }\n  }\n  :not(:last-child, :first-of-type) {\n    background-color: #f0f092;\n    &:hover,\n    :focus {\n      background-color: #f3f34b;\n    }\n  }\n`;\n","import { Button } from './FeedbackOptions.styles';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(name => (\n        <Button type=\"button\" key={name} name={name} onClick={onLeaveFeedback}>\n          {name.toUpperCase()}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n","function Notification({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Thumb = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Thumb } from './Section.styles';\n\nfunction Section(props) {\n  const { title, children } = props;\n  return (\n    <Thumb>\n      <p>{title}</p>\n      {children}\n    </Thumb>\n  );\n}\n\nexport default Section;\n","import React, { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onBtnClick = e => {\n    const btnValue = e.target.name;\n    switch (btnValue) {\n      case 'good':\n        return setGood(prevState => prevState + 1);\n\n      case 'neutral':\n        return setNeutral(prevState => prevState + 1);\n\n      case 'bad':\n        return setBad(prevState => prevState + 1);\n      default:\n        console.log('default');\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const percent = Math.round((good * 100) / (good + neutral + bad));\n    return percent;\n  };\n  const btnNames = Object.keys({ good, neutral, bad });\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={btnNames} onLeaveFeedback={onBtnClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        {!countTotalFeedback() ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}